{"ast":null,"code":"const BASE_URL = \"https://bootcamp-api.codeit.kr/api/\";\nexport const getFolderInfo = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}sample/folder`);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUserInfo = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}sample/user`);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getFolderList = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}users/1/folders`);\n    const result = await response.json();\n    // console.log(result);\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllLinkData = async id => {\n  const url = id ? `${BASE_URL}users/1/folders/${id}` : `${BASE_URL}users/1/links`;\n  try {\n    const response = await fetch(url);\n    const result = await response.json(); // 재사용성을 위해 response.json()으로 끝맺는게 좋음\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["BASE_URL","getFolderInfo","response","fetch","result","json","error","console","log","getUserInfo","getFolderList","getAllLinkData","id","url"],"sources":["C:/Users/Kim/4-weekly-mission/src/api/api.js"],"sourcesContent":["const BASE_URL = \"https://bootcamp-api.codeit.kr/api/\";\n\nexport const getFolderInfo = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}sample/folder`);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUserInfo = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}sample/user`);\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFolderList = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}users/1/folders`);\n    const result = await response.json(); \n    // console.log(result);\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllLinkData = async (id) => {\n  const url = id\n    ? `${BASE_URL}users/1/folders/${id}`\n    : `${BASE_URL}users/1/links`;\n  try {\n    const response = await fetch(url);\n    const result = await response.json(); // 재사용성을 위해 response.json()으로 끝맺는게 좋음\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,qCAAqC;AAEtD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,eAAc,CAAC;IACxD,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,aAAY,CAAC;IACtD,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,QAAS,iBAAgB,CAAC;IAC1D,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACpC;IACA,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACD,OAAO,MAAMK,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,MAAMC,GAAG,GAAGD,EAAE,GACT,GAAEZ,QAAS,mBAAkBY,EAAG,EAAC,GACjC,GAAEZ,QAAS,eAAc;EAC9B,IAAI;IACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACU,GAAG,CAAC;IACjC,MAAMT,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}