{"ast":null,"code":"function timeToString(time) {\n  let diffSec = parseInt(time / 1000);\n  // 2분 미만\n  if (diffSec <= 120) {\n    return \"1 minute ago\";\n  }\n  let diffMinute = parseInt(diffSec / 60);\n  // 59분 이하\n  if (diffMinute <= 59) {\n    return `${diffMinute} minutes ago`;\n  }\n  let diffHour = parseInt(diffMinute / 60);\n  // 23시간 이하\n  if (diffHour <= 23) {\n    return `${diffHour} hours ago`;\n  }\n  // 30일 이하\n  let diffDay = parseInt(diffHour / 24);\n  if (diffDay <= 30) {\n    return `${diffDay} days ago`;\n  }\n  let diffMonth = parseInt(diffDay / 30);\n  // 11달 이하\n  if (diffMonth <= 11) {\n    return `${diffMonth} months ago`;\n  }\n  // 11달 이상\n  let diffYear = parseInt(diffMonth / 12);\n  return `${diffYear} years ago`;\n}\nexport function CalcTime(time) {\n  let nowTime = Date.now();\n  let writingTime = Date.parse(time);\n  let diffTime = nowTime - writingTime;\n  let sentence = timeToString(diffTime);\n  return sentence;\n}\n_c = CalcTime;\nvar _c;\n$RefreshReg$(_c, \"CalcTime\");","map":{"version":3,"names":["timeToString","time","diffSec","parseInt","diffMinute","diffHour","diffDay","diffMonth","diffYear","CalcTime","nowTime","Date","now","writingTime","parse","diffTime","sentence","_c","$RefreshReg$"],"sources":["C:/Users/Kim/4-weekly-mission/src/utils/calculator.js"],"sourcesContent":["function timeToString(time) {\n  let diffSec = parseInt(time / 1000);\n  // 2분 미만\n  if (diffSec <= 120) {\n    return \"1 minute ago\";\n  }\n  let diffMinute = parseInt(diffSec / 60);\n  // 59분 이하\n  if (diffMinute <= 59) {\n    return `${diffMinute} minutes ago`;\n  }\n\n  let diffHour = parseInt(diffMinute / 60);\n  // 23시간 이하\n  if (diffHour <= 23) {\n    return `${diffHour} hours ago`;\n  }\n  // 30일 이하\n  let diffDay = parseInt(diffHour / 24);\n  if (diffDay <= 30) {\n    return `${diffDay} days ago`;\n  }\n\n  let diffMonth = parseInt(diffDay / 30);\n  // 11달 이하\n  if (diffMonth <= 11) {\n    return `${diffMonth} months ago`;\n  }\n  // 11달 이상\n  let diffYear = parseInt(diffMonth / 12);\n  return `${diffYear} years ago`;\n}\n\nexport function CalcTime(time) {\n  let nowTime = Date.now();\n  let writingTime = Date.parse(time);\n  let diffTime = nowTime - writingTime;\n\n  let sentence = timeToString(diffTime);\n  return sentence;\n}\n"],"mappings":"AAAA,SAASA,YAAYA,CAACC,IAAI,EAAE;EAC1B,IAAIC,OAAO,GAAGC,QAAQ,CAACF,IAAI,GAAG,IAAI,CAAC;EACnC;EACA,IAAIC,OAAO,IAAI,GAAG,EAAE;IAClB,OAAO,cAAc;EACvB;EACA,IAAIE,UAAU,GAAGD,QAAQ,CAACD,OAAO,GAAG,EAAE,CAAC;EACvC;EACA,IAAIE,UAAU,IAAI,EAAE,EAAE;IACpB,OAAQ,GAAEA,UAAW,cAAa;EACpC;EAEA,IAAIC,QAAQ,GAAGF,QAAQ,CAACC,UAAU,GAAG,EAAE,CAAC;EACxC;EACA,IAAIC,QAAQ,IAAI,EAAE,EAAE;IAClB,OAAQ,GAAEA,QAAS,YAAW;EAChC;EACA;EACA,IAAIC,OAAO,GAAGH,QAAQ,CAACE,QAAQ,GAAG,EAAE,CAAC;EACrC,IAAIC,OAAO,IAAI,EAAE,EAAE;IACjB,OAAQ,GAAEA,OAAQ,WAAU;EAC9B;EAEA,IAAIC,SAAS,GAAGJ,QAAQ,CAACG,OAAO,GAAG,EAAE,CAAC;EACtC;EACA,IAAIC,SAAS,IAAI,EAAE,EAAE;IACnB,OAAQ,GAAEA,SAAU,aAAY;EAClC;EACA;EACA,IAAIC,QAAQ,GAAGL,QAAQ,CAACI,SAAS,GAAG,EAAE,CAAC;EACvC,OAAQ,GAAEC,QAAS,YAAW;AAChC;AAEA,OAAO,SAASC,QAAQA,CAACR,IAAI,EAAE;EAC7B,IAAIS,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;EACxB,IAAIC,WAAW,GAAGF,IAAI,CAACG,KAAK,CAACb,IAAI,CAAC;EAClC,IAAIc,QAAQ,GAAGL,OAAO,GAAGG,WAAW;EAEpC,IAAIG,QAAQ,GAAGhB,YAAY,CAACe,QAAQ,CAAC;EACrC,OAAOC,QAAQ;AACjB;AAACC,EAAA,GAPeR,QAAQ;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}